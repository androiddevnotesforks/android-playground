plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId 'com.github.tatsuyafujisaki.androidplayground'
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        /*
         * Instruct Android Test Orchestrator to remove all shared state
         * from a device's CPU and memory between tests.
         * https://developer.android.com/training/testing/junit-runner#ato-gradle
         * https://developer.android.com/training/testing/junit-runner#using-android-test-orchestrator
         */
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro',
                    'glide.pro', // http://bumptech.github.io/glide/doc/download-setup.html#proguard
                    'okhttp3.pro', // https://square.github.io/okhttp/r8_proguard/
                    'okio.pro', // https://square.github.io/okio/#r8-proguard
                    'moshi.pro', // https://github.com/square/moshi#r8--proguard
                    'moshi-kotlin.pro', // ditto
                    'retrofit2.pro' // https://github.com/square/retrofit#r8--proguard

            buildConfigField 'String', 'BASE_URL', '"https://www.googleapis.com"'

            /*
             * Only for debugging purposes
             */
            // debuggable true
            // signingConfig signingConfigs.debug
        }
        debug {
            applicationIdSuffix ".debug"
            buildConfigField 'String', 'BASE_URL', '"https://www.googleapis.com"'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        // Android Test Orchestrator
        execution 'ANDROIDX_TEST_ORCHESTRATOR'

        unitTests {
            // Robolectric
            includeAndroidResources true
        }
    }

    /*
     * Gradle automatically adds the following as a dependency.
     * https://developer.android.com/training/testing/set-up-project#add-gradle-dependencies
     */
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
    useLibrary 'android.test.runner'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /*
     * org.jetbrains
     */

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    def coroutinesVersion = '1.3.7'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    /*
     * androidx
     */

    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.collection:collection-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.recyclerview:recyclerview-selection:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    def fragmentVersion = '1.2.5'
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    def lifecycleVersion = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"
    // https://developer.android.com/jetpack/androidx/releases/lifecycle#declaring_dependencies
    testImplementation 'androidx.arch.core:core-testing:2.1.0' // for testing LiveData

    def roomVersion = '2.2.5'
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    def pagingVersion = '2.1.2'
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"
    testImplementation "androidx.paging:paging-common-ktx:$pagingVersion"

    def workVersion = '2.4.0'
    implementation "androidx.work:work-runtime-ktx:$workVersion"
    androidTestImplementation "androidx.work:work-testing:$workVersion"

    /*
     * com.google.firebase
     */

    implementation 'com.google.firebase:firebase-analytics-ktx:17.5.0'
    implementation 'com.google.firebase:firebase-common-ktx:19.3.1'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.2.1'
    implementation 'com.google.firebase:firebase-firestore-ktx:21.6.0'
    implementation 'com.google.firebase:firebase-storage-ktx:19.2.0'

    /*
     * com.google Maps SDK
     * https://github.com/googlemaps/android-maps-ktx#installation
     */

    implementation 'com.google.maps.android:maps-ktx:2.1.3'
    implementation 'com.google.maps.android:maps-utils-ktx:2.1.3'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.maps.android:android-maps-utils:2.0.3'

    /*
     * com.google Places SDK
     * https://github.com/googlemaps/android-places-ktx#installation
     */

    implementation 'com.google.maps.android:places-ktx:0.4.0'

    /*
     * com.google
     */

    implementation 'com.google.android.libraries.places:places:2.3.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.google.android.play:core-ktx:1.8.1'

    def daggerVersion = '2.29.1'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    /*
     * Third-party
     */

    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    def okHttpVersion = '4.9.0'
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion" // CookieJar
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    // Stetho
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    def flipperVersion = '0.54.0'
    debugImplementation "com.facebook.flipper:flipper:$flipperVersion"
    debugImplementation "com.facebook.flipper:flipper-network-plugin:$flipperVersion"
    debugImplementation 'com.facebook.soloader:soloader:0.9.0'
    releaseImplementation "com.facebook.flipper:flipper-noop:$flipperVersion"

    def moshiVersion = '1.10.0'
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    def glideVersion = '4.11.0'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    /*
     * For both local unit tests and instrumented unit tests
     */

    def androidxTestVersion = '1.3.0'

    // AndroidX core library
    testImplementation "androidx.test:core-ktx:$androidxTestVersion" // Robolectric
    androidTestImplementation "androidx.test:core-ktx:$androidxTestVersion"

    // Truth assertion library
    testImplementation 'com.google.truth:truth:1.0.1'
    testImplementation "androidx.test.ext:truth:$androidxTestVersion"
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation "androidx.test.ext:truth:$androidxTestVersion"

    // JUnit Assertion library (unnecessary if Truth is used?)
    // androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.2'

    // https://issuetracker.google.com/128612536 is resolved, uncomment the following.
    // https://github.com/googlecodelabs/android-testing/blob/end_codelab_3/app/build.gradle
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    androidTestUtil "androidx.test:orchestrator:$androidxTestVersion"

    def mockkVersion = '1.10.0'
    testImplementation "io.mockk:mockk:$mockkVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"

    /*
     * For local unit tests
     * https://developer.android.com/training/testing/unit-testing/local-unit-tests#setup
     */

    testImplementation 'org.robolectric:robolectric:4.4'

    /*
     * For instrumented unit tests
     * https://developer.android.com/training/testing/unit-testing/instrumented-unit-tests#setup
     * https://developer.android.com/training/testing/set-up-project#gradle-dependencies
     */

    // AndroidJUnitRunner
    androidTestImplementation "androidx.test:runner:$androidxTestVersion"

    // JUnit Rules
    androidTestImplementation "androidx.test:rules:$androidxTestVersion"

    def espressoVersion = '3.3.0'
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
}

/*
 * Fix the "No tests found" error occurring when "./gradlew connectedCheck" is run.
 * The error is introduced by fragment-testing.
 */
//configurations.all {
//    resolutionStrategy {
//        force "androidx.test:monitor:$androidxTestVersion"
//    }
//}

apply plugin: 'com.google.gms.google-services'
